plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.jnep'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

//lombok 설정 추가 시작
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
//lombok 설정 추가 끝

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	//jakarata.validation 사용하기위함
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//오토 컴플리먼트(html파일 자동으로 새로고침, vs코드의 경우 setting[ctrl + ,] - hot code replace검색 - Reload the changed Java classes during debugging. => auto로 
	// 설정한뒤 debug모드로 실행해야함.)
	implementation 'org.springframework.boot:spring-boot-devtools'

	//쿼리 로그 파라미터 까지 보이게
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

	// LOMBOK S
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
	// LOMBOK E
}

tasks.named('test') {
	useJUnitPlatform()
}
